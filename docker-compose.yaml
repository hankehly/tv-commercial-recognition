services:
  # https://hub.docker.com/_/rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    # expose:
    #   - "5672" # service port
    ports:
      - "5672:5672"
      - "15672:15672" # management port
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # https://hub.docker.com/_/postgres
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tv-commercial-recognition
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d tv-commercial-recognition || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  # https://hub.docker.com/r/mher/flower
  flower:
    image: mher/flower:2.0.1
    command: celery flower -A my_app --address=0.0.0.0 --port=5555
    environment:
      FLOWER_ADDRESS: 0.0.0.0
      FLOWER_PORT: 5555
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      FLOWER_PURGE_OFFLINE_WORKERS: 60
      FLOWER_UNAUTHENTICATED_API: true
    ports:
      - "5555:5555"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --tries 1 --spider http://0.0.0.0:5555/flower/healthcheck || exit"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  rabbitmq:
  postgres:
